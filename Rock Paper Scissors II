{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "71224552",
   "metadata": {},
   "outputs": [],
   "source": [
    "import random\n",
    "rock = '''  ROCK\n",
    "    _______\n",
    "---'   ____)\n",
    "      (_____)\n",
    "      (_____)\n",
    "      (____)\n",
    "---.__(___)\n",
    "'''\n",
    "\n",
    "paper = '''  PAPER\n",
    "    _______\n",
    "---'   ____)____\n",
    "          ______)\n",
    "          _______)\n",
    "         _______)\n",
    "---.__________)\n",
    "'''\n",
    "\n",
    "scissors = '''  SCISSORS\n",
    "    _______\n",
    "---'   ____)____\n",
    "          ______)\n",
    "       __________)\n",
    "      (____)\n",
    "---.__(___)\n",
    "'''\n",
    "game_images = [rock, paper, scissors]\n",
    "\n",
    "select = int(input('Enter numbers 0 for rock or 1 for paper or 2 for scissors: '))\n",
    "print('\\nYou have selected:\\n')\n",
    "print(game_images[select])\n",
    "\n",
    "\n",
    "random_selection = random.randint(0,2)\n",
    "print(\"\\nComputer selects: \\n\")\n",
    "print(game_images[random_selection])\n",
    "\n",
    "\n",
    "if select > 2 and select < 0:\n",
    "  print(\"Enter valid input\")\n",
    "elif select == random_selection:\n",
    "  print(\"\\n~ It is a tie ~\")\n",
    "elif select == 0 and random_selection == 1:\n",
    "  print(\"\\n~ Computer wins ~\")\n",
    "elif select == 0 and random_selection == 2:\n",
    "  print(\"\\n~ You win ~\")\n",
    "elif select == 1 and random_selection == 1:\n",
    "  print(\"\\n~You win~\")\n",
    "elif select == 1 and random_selection == 2:\n",
    "  print(\"\\n~ Computer wins ~\")\n",
    "elif select == 2 and random_selection == 0:\n",
    "  print(\"\\n~ Computer wins ~\")\n",
    "elif select == 2 and random_selection == 1:\n",
    "  print(\"\\n~ You win ~\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "add754ea",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "01ba1ced",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "631d884f",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
